use ark_bn254::Fr;
use ark_ff::Field;
use std::str::FromStr;

fn ark_layer(round_number: usize, inputs: [Fr; 4]) -> [Fr; 4] {
    let c = [
        [
            Fr::from_str("37").unwrap(),
            Fr::from_str(
                "3751828524803055471428227881618625174556947755988347881191159153764975591158",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "13352247125433170118601974521234241686699252132838635793584252509352796067497",
            )
            .unwrap(),
            Fr::from_str(
                "21001839722121566863419881512791069124083822968210421491151340238400176843969",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "8959866518978803666083663798535154543742217570455117599799616562379347639707",
            )
            .unwrap(),
            Fr::from_str(
                "21722442537234642741320951134727484119993387379465291657407115605240150584902",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "3222831896788299315979047232033900743869692917288857580060845801753443388885",
            )
            .unwrap(),
            Fr::from_str(
                "5574110054747610058729632355948568604793546392090976147435879266833412620404",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "11437915391085696126542499325791687418764799800375359697173212755436799377493",
            )
            .unwrap(),
            Fr::from_str(
                "19347108854758320361854968987183753113398822331033233961719129079198795045322",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "14725846076402186085242174266911981167870784841637418717042290211288365715997",
            )
            .unwrap(),
            Fr::from_str(
                "17733032409684964025894538244134113560864261458948810209753406163729963104066",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "3625896738440557179745980526949999799504652863693655156640745358188128872126",
            )
            .unwrap(),
            Fr::from_str(
                "16641102106808059030810525726117803887885616319153331237086309361060282564245",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "463291105983501380924034618222275689104775247665779333141206049632645736639",
            )
            .unwrap(),
            Fr::from_str(
                "9245970744804222215259369270991414441925747897718226734085751033703871913242",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "17443852951621246980363565040958781632244400021738903729528591709655537559937",
            )
            .unwrap(),
            Fr::from_str(
                "18243401795478654990110719981452738859015913555820749188627866268359980949315",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "10761214205488034344706216213805155745482379858424137060372633423069634639664",
            )
            .unwrap(),
            Fr::from_str(
                "18200337361605220875540054729693479452916227111908726624753615870884702413869",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "1555059412520168878870894914371762771431462665764010129192912372490340449901",
            )
            .unwrap(),
            Fr::from_str(
                "5239065275003145843160321807696531775964858360555566589197008236687533209496",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "7985258549919592662769781896447490440621354347569971700598437766156081995625",
            )
            .unwrap(),
            Fr::from_str(
                "9376351072866485300578251734844671764089160611668390200194570180225759013543",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "9570976950823929161626934660575939683401710897903342799921775980893943353035",
            )
            .unwrap(),
            Fr::from_str(
                "6407880900662180043240104510114613236916437723065414158006054747177494383655",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "17962366505931708682321542383646032762931774796150042922562707170594807376009",
            )
            .unwrap(),
            Fr::from_str(
                "6245130621382842925623937534683990375669631277871468906941032622563934866013",
            )
            .unwrap(),
        ],
    ];

    let d = [
        [
            Fr::from_str(
                "8755297148735710088898562298102910035419345760166413737479281674630323398284",
            )
            .unwrap(),
            Fr::from_str(
                "16133435893292874812888083849160666046321318009323051176910097996974633748758",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "5240474505904316858775051800099222288270827863409873986701694203345984265770",
            )
            .unwrap(),
            Fr::from_str(
                "16516377322346822856154252461095180562000423191949949242508439100972699801595",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "9012679925958717565787111885188464538194947839997341443807348023221726055342",
            )
            .unwrap(),
            Fr::from_str(
                "3513323292129390671339287145562649862242777741759770715956300048086055264273",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "21855834035835287540286238525800162342051591799629360593177152465113152235615",
            )
            .unwrap(),
            Fr::from_str(
                "5945179541709432313351711573896685950772105367183734375093638912196647730870",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "11227229470941648605622822052481187204980748641142847464327016901091886692935",
            )
            .unwrap(),
            Fr::from_str(
                "874490282529106871250179638055108647411431264552976943414386206857408624500",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "8277823808153992786803029269162651355418392229624501612473854822154276610437",
            )
            .unwrap(),
            Fr::from_str(
                "14911320361190879980016686915823914584756893340104182663424627943175208757859",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "20904607884889140694334069064199005451741168419308859136555043894134683701950",
            )
            .unwrap(),
            Fr::from_str(
                "15657880601171476575713502187548665287918791967520790431542060879010363657805",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "1902748146936068574869616392736208205391158973416079524055965306829204527070",
            )
            .unwrap(),
            Fr::from_str(
                "14311738005510898661766244714944477794557156116636816483240167459479765463026",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "14452570815461138929654743535323908350592751448372202277464697056225242868484",
            )
            .unwrap(),
            Fr::from_str(
                "18878429879072656191963192145256996413709289475622337294803628783509021017215",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "10548134661912479705005015677785100436776982856523954428067830720054853946467",
            )
            .unwrap(),
            Fr::from_str(
                "21613568037783775488400147863112554980555854603176833550688470336449256480025",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "17068729307795998980462158858164249718900656779672000551618940554342475266265",
            )
            .unwrap(),
            Fr::from_str(
                "2490802518193809975066473675670874471230712567215812226164489400543194289596",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "16199718037005378969178070485166950928725365516399196926532630556982133691321",
            )
            .unwrap(),
            Fr::from_str(
                "21217120779706380859547833993003263088538196273665904984368420139631145468592",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "19148564379197615165212957504107910110246052442686857059768087896511716255278",
            )
            .unwrap(),
            Fr::from_str(
                "19611778548789975299387421023085714500105803761017217976092023831374602045251",
            )
            .unwrap(),
        ],
        [
            Fr::from_str(
                "5497141763311860520411283868772341077137612389285480008601414949457218086902",
            )
            .unwrap(),
            Fr::from_str(
                "19294458970356379238521378434506704614768857764591229894917601756581488831876",
            )
            .unwrap(),
        ],
    ];

    [
        inputs[0] + c[round_number][0],
        inputs[1] + c[round_number][1],
        inputs[2] + d[round_number][0],
        inputs[3] + d[round_number][1],
    ]
}

fn mds_layer(inputs: [Fr; 4]) -> [Fr; 4] {
    let x0 = inputs[0] + Fr::from(5) * inputs[1];
    let x1 = Fr::from(5) * inputs[0] + Fr::from(26) * inputs[1];
    let y0 = inputs[3] + Fr::from(5) * inputs[2];
    let y1 = Fr::from(5) * inputs[3] + Fr::from(26) * inputs[2];

    [y0 + x0 + x0, y1 + x1 + x1, x0 + y0, x1 + y1]
}

fn s_box(inputs: [Fr; 4]) -> [Fr; 4] {
    let mut x0 = inputs[0];
    let mut x1 = inputs[1];
    let mut y0 = inputs[2];
    let mut y1 = inputs[3];

    x0 = x0 - Fr::from(5) * y0 * y0;
    y0 = y0
        - x0.pow(&[
            14981214993055009997,
            6006880321387387405,
            10624953561019755799,
            2789598613442376532,
        ]); // 1/5
    x0 = x0
        + Fr::from(5) * y0 * y0
        + Fr::from_str(
            "8755297148735710088898562298102910035419345760166413737479281674630323398247",
        )
        .unwrap(); //DELTA

    x1 = x1 - Fr::from(5) * y1 * y1;
    y1 = y1
        - x1.pow(&[
            14981214993055009997,
            6006880321387387405,
            10624953561019755799,
            2789598613442376532,
        ]); // 1/5
    x1 = x1
        + Fr::from(5) * y1 * y1
        + Fr::from_str(
            "8755297148735710088898562298102910035419345760166413737479281674630323398247",
        )
        .unwrap(); //DELTA

    [x0, x1, y0, y1]
}

fn round(round_number: usize, inputs: [Fr; 4]) -> [Fr; 4] {
    s_box(mds_layer(ark_layer(round_number, inputs)))
}

fn permutation(inputs: [Fr; 4]) -> [Fr; 4] {
    let mut state = inputs;
    for i in 0..14 {
        state = round(i, state);
    }
    state = mds_layer(state);
    state
}

pub fn hash_4_to_1(in1: Fr, in2: Fr, in3: Fr, in4: Fr) -> Fr {
    let perm = permutation([in1, in2, in3, in4]);
    in1 + perm[0] + in2 + perm[1] + in3 + perm[2] + in4 + perm[3]
}
